#include <iostream>
#include <fstream>
#include <Windows.h>
#include <string>
#define size 100

void input();//функция ввода данных в структуру
void out();//функция вывода структуры
void search();//функция поиска по названию элемента
void onfile();//функция записи в файл
void infile();//функция прочтения из файла

using namespace std;
union ForBook//обьединение массивов char разной размерности
{
    char name[50];
    char surname[50];
    char dadname[50];
    char address[50];
    char number_phone[20];
    char place_work_or_study[10];
    char post[20];
};

struct Birthday
{
    std::string date_birthday;
};

struct Book
{
    ForBook yourself_name;
    ForBook last_name;
    ForBook dad_name;
    ForBook direction;
    ForBook phone;
    ForBook place;
    ForBook position;
    Birthday date;
};

Book list_of_book[size];
int choice, current_size = 0, number_persons;

int main()
{
    system("color 70");
    setlocale(LC_ALL, "Russian");
    SetConsoleCP(1251);
    do {//вызов меню и функций
        std::cout << "Выберите операцию:" << endl;
        std::cout << "1 - Ввод информации." << endl;
        std::cout << "2 - Вывод информации." << endl;
        std::cout << "3 - Поиск информации." << endl;
        std::cout << "4 - Запись в файл." << endl;
        std::cout << "5 - Чтение из файла." << endl;
        std::cout << "6 - Выход." << endl;
        cin >> choice;
        switch (choice)
        {
        case 1:
            input();
            break;
        case 2:
            out();
            break;
        case 3:
            search();
            break;
        case 4:
            infile();
            break;
        case 5:
            onfile();
            break;
        }
    } while (choice != 6);
}

void input()//добавляем новый элемент в структуру
{
    std::cout << endl;
    std::cout << "Ввод информации: " << endl;
    std::cout << "Введите количество человек: ";
    std::cin >> number_persons;
    std::cout << endl;
    if (current_size < size) {
        for (int i = 0; i < number_persons; i++) {
            std::cout << "Информация о " << i + 1 << " персоне: " << endl;
            std::cout << "Введите имя: ";
            cin.ignore();
            cin.getline(list_of_book[current_size].yourself_name.name, 40);
            std::cout << "Введите фамилию: ";
            cin.getline(list_of_book[current_size].last_name.surname, 40);
            std::cout << "Введите отчество: ";
            cin.getline(list_of_book[current_size].dad_name.dadname, 40);
            std::cout << "Введите адрес: ";
            cin.getline(list_of_book[current_size].direction.address, 40);
            std::cout << "Введите номер телефона: ";
            cin.getline(list_of_book[current_size].phone.number_phone, 15);
            std::cout << "Введите место работы или учебы: ";
            cin.getline(list_of_book[current_size].place.place_work_or_study, 10);
            std::cout << "Введите должность: ";
            cin.getline(list_of_book[current_size].position.post, 20);
            std::cout << "Введите дату рождения: ";
            getline(cin, list_of_book[current_size].date.date_birthday);
            current_size++;
            std::cout << endl;
        }
    }
}

void out()//выводим всю информацию об структуре
{
    std::cout << endl;
    std::cout << "Вывод информации: " << endl;
    for (int i = 0; i < current_size; i++) {
        std::cout << "Информация о " << i + 1 << " персоне: " << endl;
        std::cout << "Имя: ";
        std::cout << list_of_book[i].yourself_name.name << endl;
        std::cout << "Фамилия: ";
        std::cout << list_of_book[i].last_name.surname << endl;
        std::cout << "Отчество: ";
        std::cout << list_of_book[i].dad_name.dadname << endl;
        std::cout << "Адрес: ";
        std::cout << list_of_book[i].direction.address << endl;
        std::cout << "Номер телефона: ";
        std::cout << list_of_book[i].phone.number_phone << endl;
        std::cout << "Место работы или учёбы: ";
        std::cout << list_of_book[i].place.place_work_or_study << endl;
        std::cout << "Должность: ";
        std::cout << list_of_book[i].position.post << endl;
        std::cout << "Дата рождения: ";
        std::cout << list_of_book[i].date.date_birthday << endl;
        std::cout << endl;
    }
}


void search() {//ищем элемент с совпадающем названием
{
    char lastname[50];
    std::cout << "Введите фамилию: ";
    cin.ignore();
    cin.getline(lastname, 40);
    for (int i = 0; i < current_size; i++) {
        if (strcmp(lastname, list_of_book[i].last_name.surname) == 0) {
            std::cout << "Информация о " << i + 1 << " персоне: " << endl;
            std::cout << "Имя: ";
            std::cout << list_of_book[i].yourself_name.name << endl;
            std::cout << "Фамилия: ";
            std::cout << list_of_book[i].last_name.surname << endl;
            std::cout << "Отчество: ";
            std::cout << list_of_book[i].dad_name.dadname << endl;
            std::cout << "Адрес: ";
            std::cout << list_of_book[i].direction.address << endl;
            std::cout << "Номер телефона: ";
            std::cout << list_of_book[i].phone.number_phone << endl;
            std::cout << "Место работы или учёбы: ";
            std::cout << list_of_book[i].place.place_work_or_study << endl;
            std::cout << "Должность: ";
            std::cout << list_of_book[i].position.post << endl;
            std::cout << "Дата рождения: ";
            std::cout << list_of_book[i].date.date_birthday << endl;
            std::cout << endl;
        }
        else
        {
            std::cout << "Информации не найдено." << endl;
        }
    }
}

void infile() {
    ofstream file1("book.txt", ios::app);

    if (!file1) {
        cout << "Не удалось открыть файл для записи." << endl;
    }

    for (int i = 0; i < current_size; i++) {
        file1 << "Информация о " << i + 1 << " персоне: " << endl;
        file1 << "Имя: ";
        file1 << list_of_book[i].yourself_name.name << endl;
        file1 << "Фамилия: ";
        file1 << list_of_book[i].last_name.surname << endl;
        file1 << "Отчество: ";
        file1 << list_of_book[i].dad_name.dadname << endl;
        file1 << "Адрес: ";
        file1 << list_of_book[i].direction.address << endl;
        file1 << "Номер телефона: ";
        file1 << list_of_book[i].phone.number_phone << endl;
        file1 << "Место работы или учёбы: ";
        file1 << list_of_book[i].place.place_work_or_study << endl;
        file1 << "Должность: ";
        file1 << list_of_book[i].position.post << endl;
        file1 << "Дата рождения: ";
        file1 << list_of_book[i].date.date_birthday << endl;
    }

    file1.close();
    std::cout << "Данные успешно записаны." << endl;
}

void onfile(){
    ifstream file2("book.txt");

    if (!file2) {
        cout << "Не удалось открыть файл для чтения." << endl;
    }

    string line;
    while (getline(file2, line)) {
        cout << line << endl;
    }

    file2.close();
    cout << "Данные успешно прочтены из файлы." << endl;
}

